version: '3.8'

services:
  web:
    build: .
    container_name: django
    volumes:
#      - .:/app
      - ./static:/app/staticfiles
    depends_on:
      - db
      - redis
      - minio
    env_file:
      - .env.prod
    networks:
      - app_network

  db:
    image: postgres:17-alpine
    container_name: postgres_db
    restart: always
    env_file:
      - .env.prod
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  redis:
    image: redis:7-alpine
    container_name: redis_cache
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app_network

  celery:
    build: .
    container_name: celery_worker
    command: celery -A store worker --loglevel=info
    depends_on:
      - web
      - redis
    env_file:
      - .env.prod
    networks:
      - app_network

  celery-beat:
    build: .
    container_name: celery_beat
    command: celery -A store beat --loglevel=info
    depends_on:
      - web
      - redis
    env_file:
      - .env.prod
    networks:
      - app_network

  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"  # S3 API
      - "9001:9001"  # Web UI
    env_file:
      - .env.prod
    volumes:
      - minio_data:/data
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "8001:80"
    depends_on:
      - web
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/static:ro
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  media_volume:
  minio_data: