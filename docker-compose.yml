version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn store.wsgi:application --bind 0.0.0.0:8000
      "
    volumes:
      - .:/app  # Исходный код (если нужно)
      - static_volume:/app/staticfiles  # сюда складывается статика после collectstatic
    ports:
      - "8000:8000"
    environment:
      DJANGO_SECRET_KEY: 'django-insecure-x43oy+_u*#6(o+1i!c@_&2659fr_52&2i^d-f_3b_gam0%74!w'
      DJANGO_ALLOWED_HOSTS: '127.0.0.1,localhost'
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432

      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET: media
      MINIO_ENDPOINT: http://minio:9000
    depends_on:
      - db
      - redis
      - minio
    env_file:
      - .env
    networks:
      - app_network

  db:
    image: postgres:15-alpine
    container_name: postgres_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  redis:
    image: redis:7-alpine
    container_name: redis_cache
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app_network

  celery:
    build: .
    container_name: celery_worker
    command: celery -A store worker --loglevel=info
    depends_on:
      - web
      - redis
    env_file:
      - .env
    networks:
      - app_network

  celery-beat:
    build: .
    container_name: celery_beat
    command: celery -A store beat --loglevel=info
    depends_on:
      - web
      - redis
    env_file:
      - .env
    networks:
      - app_network

  minio:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"  # S3 API
      - "9001:9001"  # Web UI
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - web
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/var/www/static  # статические файлы доступны в Nginx
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
  minio_data: